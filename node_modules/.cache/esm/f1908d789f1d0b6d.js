let Queue,redis;_9f1‍.x([["TESTING",()=>TESTING],["client",()=>client],["queues",()=>queues]]);_9f1‍.w("bull",[["default",["Queue"],function(v){Queue=v}]]);_9f1‍.w("redis",[["default",["redis"],function(v){redis=v}]]);


       const TESTING = "TESTING";
       const client = redis.createClient(); // this creates a new client By default redis.createClient() will use 127.0.0.1 and port 6379.
       const queues = {
  [TESTING]: new Queue(TESTING, "0.0.0.0")
};

const data = {
  foo: "bar"
};

const options = {
  repeat: {
    every: 10000,
    limit: 10
  },
  attempts: 3
};

queues.TESTING.add(data, options);

queues.TESTING.process(async job => {
  client.on("connect", function() {
    console.log("Redis client connected");
  });
  client.on("error", function(err) {
    _9f1‍.g.console.log("Something went wrong " + err);
  });
  await executeRedisCommand(client, job);
});

const executeRedisCommand = (client, job) =>
  new Promise((resolve, reject) => {
    client.set("foo", job.data.foo, (error, result) => {});
  });
